name: Rust CI/CD

on:
  push:
    branches: [ "testing" ]
  pull_request:
    branches: [ "staging" ]

env:
  CARGO_TERM_COLOR: always
  DATABASE_URL: postgres://${{ secrets.POSTGRES_USER }}:${{ secrets.POSTGRES_PASSWORD }}@localhost:5432/${{ secrets.POSTGRES_DB }}

jobs:
  build-and-test:

    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
          POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
          POSTGRES_DB: ${{ secrets.POSTGRES_DB }}
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - uses: actions/checkout@v4
    - name: Build
      run: cargo build --verbose
      working-directory: ./track_my_stuff_api
      
    - name: Setup Diesel CLI
      uses: actions-rs/toolchain@v1
      with:
        toolchain: nightly-2024-11-14
        override: true
        components: diesel_cli
        
    - name: Create Database
      run: |
        sudo -u postgres psql -c "CREATE DATABASE ${{ secrets.POSTGRES_DB }};"
        sudo -u postgres psql -c "CREATE USER ${{ secrets.POSTGRES_USER }} WITH PASSWORD '${{ secrets.POSTGRES_PASSWORD }}';"
        sudo -u postgres psql -c "GRANT ALL PRIVILEGES ON DATABASE ${{ secrets.POSTGRES_DB }} TO ${{ secrets.POSTGRES_USER }};"
        
    - name: Run Diesel Migrations
      run: diesel migration run
      working-directory: ./track_my_stuff_api
      
    - name: Run tests
      run: cargo test --verbose
      working-directory: ./track_my_stuff_api
